buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'

}

allprojects {
    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'one.block:eosiojava:1.0.0'

    implementation 'org.jetbrains:annotations:17.0.0'
    implementation (group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
        exclude group: 'junit', module: 'junit'
    }
    api 'com.squareup.retrofit2:retrofit:2.5.0'
    api 'com.squareup.retrofit2:converter-gson:2.5.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
    testImplementation 'com.squareup.retrofit2:retrofit:2.5.0'
    testImplementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    testImplementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.12.1'
    // These are for LiveServerUnitTest.
    testImplementation 'one.block:eosiojavasoftkeysignatureprovider:1.0.0'
    testImplementation 'one.block:eosio-java-abieos-serialization-provider:1.0.0'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

def libraryGroupId = 'one.block'
def libraryArtifactId = 'eosio-java-rpc-provider'
def libraryVersion = '1.0.0'

task sourcesJar(type: Jar, dependsOn: classes){
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc){
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
    enabled = true
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        jar(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            groupId libraryGroupId
            version libraryVersion
            artifactId libraryArtifactId

            artifact("$buildDir/libs/${artifactId}.jar")
        }
    }
}
